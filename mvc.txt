

v: jsp html 页面

c: action, jsp等页面会将数据传到action中

m: entity ,service，dao  实体类和管理实体类的类， 处理业务逻辑. action 只是去调用处理service的处理业务逻辑的方法，但不用清楚里面是具体怎么实现的




接口： 仅仅声明 变量和方法

实现接口类：实现接口，方法中具体怎么实现是在这里写.


但去new的时候， 是new一个接口,不是new一个实现类 、



----------------------------------------------------------------------------------------------------------------------------------------



MVC（模型Model-视图View-控制器Controller）是一种设计模式，

	M(Model)在Java Web里说的是JavaBean，在JavaBean中除了其属性和字段，还可以有行为及其事件，JavaBean可以理解为普通Java对象。Java普通对象，就是符合Java规范的所有对象，这和实体类完全是两回事。业务逻辑和数据访问应该放在Model层，也就是V负责展示数据，Controler除了转发不做业务逻辑。真正的逻辑事务，数据访问，甚至算法都放到Model去。

    	Controller是控制器的意思，所谓控制器，就是将用户请求转发给模型层，经过处理后把结果返回到界面层展现的一个中间层，那么Controller到底管什么工作呢？先不说.先来看下在Java Web中这三个层一般的定义，一般在Java Web里，JSP充当V，Servlet充当C,JavaBean充当M，这里的Servlet管什么工作呢？接受输入，转到Model层去处理，处理结果保存后转发到JSP，然后展现数据。所以它的功能就是控制器的基本功能，它就管转发，在V和M之间转来转去。

　    　MVC没有把业务的逻辑访问看成两个层，这是采用三层架构或MVC搭建程序最主要的区别。当然了。在三层中也提到了Model，但是三层架构中Model的概念与MVC中Model的概念是不一样的，“三层”中典型的Model层是已实体类构成的，而MVC里，则是由业务逻辑与访问数据组成的。



----------------------------------------------------------------------------------------------------------------------------------------



三层结构为:

1.表示层(USL):主要表示WEB方式，也可以表示成WINFORM方式。如果逻辑层相当强大和完善，无论表现层如何定义和更改，逻辑层都能完善地提供服务。

2.业务逻辑层(BLL):主要是针对具体的问题的操作，也可以理解成对数据层的操作，对数据业务逻辑处理。如果说数据层是积木，那逻辑层就是对这些积木的搭建。

3.数据访问层(DAL):主要是对原始数据(数据库或者文本文件等存放数据的形式)的操作层，而不是指原始数据，也就是说，是对数据的操作，而不是数据库，具体为业务逻辑层或表示层提供数据服务。



----------------------------------------------------------------------------------------------------------------------------------------


   三层架构 和 MVC 的区别




































































